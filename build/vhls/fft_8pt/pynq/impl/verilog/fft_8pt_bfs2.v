// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module fft_8pt_bfs2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        temp1_0_address0,
        temp1_0_ce0,
        temp1_0_q0,
        temp1_0_address1,
        temp1_0_ce1,
        temp1_0_q1,
        temp1_1_address0,
        temp1_1_ce0,
        temp1_1_q0,
        temp1_1_address1,
        temp1_1_ce1,
        temp1_1_q1,
        temp2_0_address0,
        temp2_0_ce0,
        temp2_0_we0,
        temp2_0_d0,
        temp2_1_address0,
        temp2_1_ce0,
        temp2_1_we0,
        temp2_1_d0,
        grp_fu_162_p_din0,
        grp_fu_162_p_din1,
        grp_fu_162_p_opcode,
        grp_fu_162_p_dout0,
        grp_fu_162_p_ce,
        grp_fu_166_p_din0,
        grp_fu_166_p_din1,
        grp_fu_166_p_opcode,
        grp_fu_166_p_dout0,
        grp_fu_166_p_ce,
        grp_fu_170_p_din0,
        grp_fu_170_p_din1,
        grp_fu_170_p_opcode,
        grp_fu_170_p_dout0,
        grp_fu_170_p_ce,
        grp_fu_178_p_din0,
        grp_fu_178_p_din1,
        grp_fu_178_p_dout0,
        grp_fu_178_p_ce,
        grp_fu_182_p_din0,
        grp_fu_182_p_din1,
        grp_fu_182_p_dout0,
        grp_fu_182_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [2:0] temp1_0_address0;
output   temp1_0_ce0;
input  [31:0] temp1_0_q0;
output  [2:0] temp1_0_address1;
output   temp1_0_ce1;
input  [31:0] temp1_0_q1;
output  [2:0] temp1_1_address0;
output   temp1_1_ce0;
input  [31:0] temp1_1_q0;
output  [2:0] temp1_1_address1;
output   temp1_1_ce1;
input  [31:0] temp1_1_q1;
output  [2:0] temp2_0_address0;
output   temp2_0_ce0;
output   temp2_0_we0;
output  [31:0] temp2_0_d0;
output  [2:0] temp2_1_address0;
output   temp2_1_ce0;
output   temp2_1_we0;
output  [31:0] temp2_1_d0;
output  [31:0] grp_fu_162_p_din0;
output  [31:0] grp_fu_162_p_din1;
output  [1:0] grp_fu_162_p_opcode;
input  [31:0] grp_fu_162_p_dout0;
output   grp_fu_162_p_ce;
output  [31:0] grp_fu_166_p_din0;
output  [31:0] grp_fu_166_p_din1;
output  [1:0] grp_fu_166_p_opcode;
input  [31:0] grp_fu_166_p_dout0;
output   grp_fu_166_p_ce;
output  [31:0] grp_fu_170_p_din0;
output  [31:0] grp_fu_170_p_din1;
output  [0:0] grp_fu_170_p_opcode;
input  [31:0] grp_fu_170_p_dout0;
output   grp_fu_170_p_ce;
output  [31:0] grp_fu_178_p_din0;
output  [31:0] grp_fu_178_p_din1;
input  [31:0] grp_fu_178_p_dout0;
output   grp_fu_178_p_ce;
output  [31:0] grp_fu_182_p_din0;
output  [31:0] grp_fu_182_p_din1;
input  [31:0] grp_fu_182_p_dout0;
output   grp_fu_182_p_ce;

reg ap_idle;
reg temp1_0_ce0;
reg temp1_0_ce1;
reg temp1_1_ce0;
reg temp1_1_ce1;
reg[2:0] temp2_0_address0;
reg temp2_0_ce0;
reg temp2_0_we0;
reg[31:0] temp2_0_d0;
reg[2:0] temp2_1_address0;
reg temp2_1_ce0;
reg temp2_1_we0;
reg[31:0] temp2_1_d0;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state4_pp0_stage1_iter1;
wire    ap_block_state6_pp0_stage1_iter2;
wire    ap_block_state8_pp0_stage1_iter3;
wire    ap_block_state10_pp0_stage1_iter4;
wire    ap_block_state12_pp0_stage1_iter5;
wire    ap_block_state14_pp0_stage1_iter6;
wire    ap_block_state16_pp0_stage1_iter7;
wire    ap_block_state18_pp0_stage1_iter8;
wire    ap_block_pp0_stage1_subdone;
reg   [0:0] icmp_ln27_reg_370;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [31:0] reg_182;
wire    ap_block_pp0_stage1_11001;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
wire    ap_block_state9_pp0_stage0_iter4;
wire    ap_block_state11_pp0_stage0_iter5;
wire    ap_block_state13_pp0_stage0_iter6;
wire    ap_block_state15_pp0_stage0_iter7;
wire    ap_block_state17_pp0_stage0_iter8;
wire    ap_block_state19_pp0_stage0_iter9;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln27_fu_206_p2;
reg   [0:0] icmp_ln27_reg_370_pp0_iter1_reg;
reg   [0:0] icmp_ln27_reg_370_pp0_iter2_reg;
reg   [0:0] icmp_ln27_reg_370_pp0_iter3_reg;
reg   [0:0] icmp_ln27_reg_370_pp0_iter4_reg;
reg   [0:0] icmp_ln27_reg_370_pp0_iter5_reg;
reg   [0:0] icmp_ln27_reg_370_pp0_iter6_reg;
reg   [0:0] icmp_ln27_reg_370_pp0_iter7_reg;
wire   [2:0] add_ln_fu_274_p3;
reg   [2:0] add_ln_reg_374;
reg   [2:0] add_ln_reg_374_pp0_iter1_reg;
reg   [2:0] add_ln_reg_374_pp0_iter2_reg;
reg   [2:0] add_ln_reg_374_pp0_iter3_reg;
wire   [0:0] trunc_ln30_fu_282_p1;
reg   [0:0] trunc_ln30_reg_379;
wire   [2:0] add_ln31_fu_298_p2;
reg   [2:0] add_ln31_reg_395;
reg   [2:0] add_ln31_reg_395_pp0_iter1_reg;
reg   [2:0] add_ln31_reg_395_pp0_iter2_reg;
reg   [2:0] add_ln31_reg_395_pp0_iter3_reg;
reg   [2:0] add_ln31_reg_395_pp0_iter4_reg;
reg   [2:0] add_ln31_reg_395_pp0_iter5_reg;
reg   [2:0] add_ln31_reg_395_pp0_iter6_reg;
reg   [2:0] add_ln31_reg_395_pp0_iter7_reg;
reg   [2:0] add_ln31_reg_395_pp0_iter8_reg;
reg   [31:0] p_t_reg_400;
reg   [31:0] p_t_2_reg_406;
wire   [31:0] p_r_M_value_fu_325_p3;
reg   [31:0] p_r_M_value_reg_412;
wire   [31:0] p_r_M_value_11_fu_333_p3;
reg   [31:0] p_r_M_value_11_reg_417;
reg   [31:0] mul_ac_i_i_reg_422;
reg   [31:0] mul_bd_i_i_reg_427;
reg   [31:0] mul_ad_i_i_reg_432;
reg   [31:0] mul_bc_i_i_reg_437;
wire   [63:0] zext_ln30_fu_341_p1;
reg   [63:0] zext_ln30_reg_442;
reg   [63:0] zext_ln30_reg_442_pp0_iter5_reg;
reg   [63:0] zext_ln30_reg_442_pp0_iter6_reg;
reg   [63:0] zext_ln30_reg_442_pp0_iter7_reg;
reg   [63:0] zext_ln30_reg_442_pp0_iter8_reg;
reg   [31:0] p_r_M_value_13_reg_454;
reg   [31:0] p_r_M_value_12_reg_465;
reg   [31:0] p_r_M_value_1_reg_471;
reg   [31:0] p_r_M_value_14_reg_477;
reg   [31:0] p_r_M_value_17_reg_483;
reg   [31:0] p_r_M_value_18_reg_488;
wire   [63:0] zext_ln31_fu_345_p1;
reg   [63:0] zext_ln31_reg_493;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln30_1_fu_292_p1;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage1;
reg   [1:0] j_fu_58;
wire   [1:0] add_ln28_fu_304_p2;
wire    ap_loop_init;
reg   [1:0] ap_sig_allocacmp_j_load;
reg   [3:0] i_fu_62;
wire   [3:0] select_ln27_1_fu_244_p3;
reg   [3:0] ap_sig_allocacmp_i_load;
reg   [2:0] indvar_flatten_fu_66;
wire   [2:0] add_ln27_fu_212_p2;
reg   [2:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [31:0] grp_fu_162_p0;
reg   [31:0] grp_fu_162_p1;
reg   [31:0] grp_fu_166_p0;
reg   [31:0] grp_fu_166_p1;
reg   [31:0] grp_fu_170_p0;
reg   [31:0] grp_fu_170_p1;
reg   [31:0] grp_fu_174_p0;
reg   [31:0] grp_fu_174_p1;
reg   [31:0] grp_fu_178_p0;
reg   [31:0] grp_fu_178_p1;
wire   [0:0] icmp_ln28_fu_224_p2;
wire   [3:0] add_ln27_1_fu_238_p2;
wire   [2:0] trunc_ln27_fu_252_p1;
wire   [1:0] select_ln27_fu_230_p3;
wire   [0:0] tmp_fu_266_p3;
wire   [2:0] add_ln30_fu_286_p2;
wire   [2:0] zext_ln28_fu_262_p1;
wire   [2:0] or_ln27_fu_256_p2;
reg   [1:0] grp_fu_162_opcode;
wire    ap_block_pp0_stage1_00001;
wire    ap_block_pp0_stage0_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter8_stage0;
reg    ap_idle_pp0_0to7;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_1to9;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

fft_8pt_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter9 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to7 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter8_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to7 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter8_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to7 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter8_stage0))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to7 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter8_stage0))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to7 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter8_stage0))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to7 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter8_stage0))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to7 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter8_stage0))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to7 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter8_stage0))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln27_fu_206_p2 == 1'd0))) begin
            i_fu_62 <= select_ln27_1_fu_244_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_62 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln27_fu_206_p2 == 1'd0))) begin
            indvar_flatten_fu_66 <= add_ln27_fu_212_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_66 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln27_fu_206_p2 == 1'd0))) begin
            j_fu_58 <= add_ln28_fu_304_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_58 <= 2'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln27_fu_206_p2 == 1'd0))) begin
        add_ln31_reg_395 <= add_ln31_fu_298_p2;
        add_ln_reg_374 <= add_ln_fu_274_p3;
        trunc_ln30_reg_379 <= trunc_ln30_fu_282_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln31_reg_395_pp0_iter1_reg <= add_ln31_reg_395;
        add_ln31_reg_395_pp0_iter2_reg <= add_ln31_reg_395_pp0_iter1_reg;
        add_ln31_reg_395_pp0_iter3_reg <= add_ln31_reg_395_pp0_iter2_reg;
        add_ln31_reg_395_pp0_iter4_reg <= add_ln31_reg_395_pp0_iter3_reg;
        add_ln31_reg_395_pp0_iter5_reg <= add_ln31_reg_395_pp0_iter4_reg;
        add_ln31_reg_395_pp0_iter6_reg <= add_ln31_reg_395_pp0_iter5_reg;
        add_ln31_reg_395_pp0_iter7_reg <= add_ln31_reg_395_pp0_iter6_reg;
        add_ln31_reg_395_pp0_iter8_reg <= add_ln31_reg_395_pp0_iter7_reg;
        add_ln_reg_374_pp0_iter1_reg <= add_ln_reg_374;
        add_ln_reg_374_pp0_iter2_reg <= add_ln_reg_374_pp0_iter1_reg;
        add_ln_reg_374_pp0_iter3_reg <= add_ln_reg_374_pp0_iter2_reg;
        icmp_ln27_reg_370 <= icmp_ln27_fu_206_p2;
        icmp_ln27_reg_370_pp0_iter1_reg <= icmp_ln27_reg_370;
        icmp_ln27_reg_370_pp0_iter2_reg <= icmp_ln27_reg_370_pp0_iter1_reg;
        icmp_ln27_reg_370_pp0_iter3_reg <= icmp_ln27_reg_370_pp0_iter2_reg;
        icmp_ln27_reg_370_pp0_iter4_reg <= icmp_ln27_reg_370_pp0_iter3_reg;
        icmp_ln27_reg_370_pp0_iter5_reg <= icmp_ln27_reg_370_pp0_iter4_reg;
        icmp_ln27_reg_370_pp0_iter6_reg <= icmp_ln27_reg_370_pp0_iter5_reg;
        icmp_ln27_reg_370_pp0_iter7_reg <= icmp_ln27_reg_370_pp0_iter6_reg;
        p_r_M_value_11_reg_417[29 : 23] <= p_r_M_value_11_fu_333_p3[29 : 23];
p_r_M_value_11_reg_417[31] <= p_r_M_value_11_fu_333_p3[31];
        p_r_M_value_reg_412[29 : 23] <= p_r_M_value_fu_325_p3[29 : 23];
        zext_ln30_reg_442[2 : 0] <= zext_ln30_fu_341_p1[2 : 0];
        zext_ln30_reg_442_pp0_iter5_reg[2 : 0] <= zext_ln30_reg_442[2 : 0];
        zext_ln30_reg_442_pp0_iter6_reg[2 : 0] <= zext_ln30_reg_442_pp0_iter5_reg[2 : 0];
        zext_ln30_reg_442_pp0_iter7_reg[2 : 0] <= zext_ln30_reg_442_pp0_iter6_reg[2 : 0];
        zext_ln30_reg_442_pp0_iter8_reg[2 : 0] <= zext_ln30_reg_442_pp0_iter7_reg[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul_ac_i_i_reg_422 <= grp_fu_178_p_dout0;
        mul_bd_i_i_reg_427 <= grp_fu_182_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul_ad_i_i_reg_432 <= grp_fu_178_p_dout0;
        mul_bc_i_i_reg_437 <= grp_fu_182_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_r_M_value_12_reg_465 <= grp_fu_162_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_r_M_value_13_reg_454 <= temp1_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_r_M_value_14_reg_477 <= temp1_1_q0;
        p_r_M_value_1_reg_471 <= grp_fu_162_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_r_M_value_17_reg_483 <= grp_fu_170_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_r_M_value_18_reg_488 <= grp_fu_170_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_370 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_t_2_reg_406 <= temp1_1_q1;
        p_t_reg_400 <= temp1_0_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_182 <= grp_fu_166_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        zext_ln31_reg_493[2 : 0] <= zext_ln31_fu_345_p1[2 : 0];
    end
end

always @ (*) begin
    if (((icmp_ln27_reg_370 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln27_reg_370_pp0_iter7_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter8_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter8_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to7 = 1'b1;
    end else begin
        ap_idle_pp0_0to7 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to9 = 1'b1;
    end else begin
        ap_idle_pp0_1to9 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_load = 4'd0;
    end else begin
        ap_sig_allocacmp_i_load = i_fu_62;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 3'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_66;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_load = 2'd0;
    end else begin
        ap_sig_allocacmp_j_load = j_fu_58;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage0_00001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_162_opcode = 2'd1;
        end else if (((1'b0 == ap_block_pp0_stage1_00001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_162_opcode = 2'd0;
        end else begin
            grp_fu_162_opcode = 'bx;
        end
    end else begin
        grp_fu_162_opcode = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_162_p0 = mul_ad_i_i_reg_432;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_162_p0 = mul_ac_i_i_reg_422;
        end else begin
            grp_fu_162_p0 = 'bx;
        end
    end else begin
        grp_fu_162_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_162_p1 = mul_bc_i_i_reg_437;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_162_p1 = mul_bd_i_i_reg_427;
        end else begin
            grp_fu_162_p1 = 'bx;
        end
    end else begin
        grp_fu_162_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_166_p0 = p_r_M_value_14_reg_477;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_166_p0 = p_r_M_value_13_reg_454;
    end else begin
        grp_fu_166_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_166_p1 = p_r_M_value_1_reg_471;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_166_p1 = p_r_M_value_12_reg_465;
    end else begin
        grp_fu_166_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_170_p0 = p_r_M_value_14_reg_477;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_170_p0 = p_r_M_value_13_reg_454;
    end else begin
        grp_fu_170_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_170_p1 = p_r_M_value_1_reg_471;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_170_p1 = p_r_M_value_12_reg_465;
    end else begin
        grp_fu_170_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_174_p0 = p_r_M_value_reg_412;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_174_p0 = p_r_M_value_fu_325_p3;
        end else begin
            grp_fu_174_p0 = 'bx;
        end
    end else begin
        grp_fu_174_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_174_p1 = p_t_2_reg_406;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_174_p1 = p_t_reg_400;
        end else begin
            grp_fu_174_p1 = 'bx;
        end
    end else begin
        grp_fu_174_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_178_p0 = p_r_M_value_11_reg_417;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_178_p0 = p_r_M_value_11_fu_333_p3;
        end else begin
            grp_fu_178_p0 = 'bx;
        end
    end else begin
        grp_fu_178_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_178_p1 = p_t_reg_400;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_178_p1 = p_t_2_reg_406;
        end else begin
            grp_fu_178_p1 = 'bx;
        end
    end else begin
        grp_fu_178_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp1_0_ce0 = 1'b1;
    end else begin
        temp1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp1_0_ce1 = 1'b1;
    end else begin
        temp1_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp1_1_ce0 = 1'b1;
    end else begin
        temp1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp1_1_ce1 = 1'b1;
    end else begin
        temp1_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter8 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            temp2_0_address0 = zext_ln31_fu_345_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            temp2_0_address0 = zext_ln30_reg_442_pp0_iter7_reg;
        end else begin
            temp2_0_address0 = 'bx;
        end
    end else begin
        temp2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        temp2_0_ce0 = 1'b1;
    end else begin
        temp2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter8 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            temp2_0_d0 = p_r_M_value_17_reg_483;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            temp2_0_d0 = reg_182;
        end else begin
            temp2_0_d0 = 'bx;
        end
    end else begin
        temp2_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        temp2_0_we0 = 1'b1;
    end else begin
        temp2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp2_1_address0 = zext_ln31_reg_493;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        temp2_1_address0 = zext_ln30_reg_442_pp0_iter8_reg;
    end else begin
        temp2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        temp2_1_ce0 = 1'b1;
    end else begin
        temp2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp2_1_d0 = p_r_M_value_18_reg_488;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        temp2_1_d0 = reg_182;
    end else begin
        temp2_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        temp2_1_we0 = 1'b1;
    end else begin
        temp2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_idle_pp0_0to7 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter8_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to9 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln27_1_fu_238_p2 = (ap_sig_allocacmp_i_load + 4'd4);

assign add_ln27_fu_212_p2 = (ap_sig_allocacmp_indvar_flatten_load + 3'd1);

assign add_ln28_fu_304_p2 = (select_ln27_fu_230_p3 + 2'd1);

assign add_ln30_fu_286_p2 = (add_ln_fu_274_p3 + 3'd2);

assign add_ln31_fu_298_p2 = (zext_ln28_fu_262_p1 + or_ln27_fu_256_p2);

assign add_ln_fu_274_p3 = {{tmp_fu_266_p3}, {select_ln27_fu_230_p3}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign grp_fu_162_p_ce = 1'b1;

assign grp_fu_162_p_din0 = grp_fu_162_p0;

assign grp_fu_162_p_din1 = grp_fu_162_p1;

assign grp_fu_162_p_opcode = grp_fu_162_opcode;

assign grp_fu_166_p_ce = 1'b1;

assign grp_fu_166_p_din0 = grp_fu_166_p0;

assign grp_fu_166_p_din1 = grp_fu_166_p1;

assign grp_fu_166_p_opcode = 2'd0;

assign grp_fu_170_p_ce = 1'b1;

assign grp_fu_170_p_din0 = grp_fu_170_p0;

assign grp_fu_170_p_din1 = grp_fu_170_p1;

assign grp_fu_170_p_opcode = 2'd1;

assign grp_fu_178_p_ce = 1'b1;

assign grp_fu_178_p_din0 = grp_fu_174_p0;

assign grp_fu_178_p_din1 = grp_fu_174_p1;

assign grp_fu_182_p_ce = 1'b1;

assign grp_fu_182_p_din0 = grp_fu_178_p0;

assign grp_fu_182_p_din1 = grp_fu_178_p1;

assign icmp_ln27_fu_206_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln28_fu_224_p2 = ((ap_sig_allocacmp_j_load == 2'd2) ? 1'b1 : 1'b0);

assign or_ln27_fu_256_p2 = (trunc_ln27_fu_252_p1 | 3'd2);

assign p_r_M_value_11_fu_333_p3 = ((trunc_ln30_reg_379[0:0] == 1'b1) ? 32'd3212836864 : 32'd0);

assign p_r_M_value_fu_325_p3 = ((trunc_ln30_reg_379[0:0] == 1'b1) ? 32'd0 : 32'd1065353216);

assign select_ln27_1_fu_244_p3 = ((icmp_ln28_fu_224_p2[0:0] == 1'b1) ? add_ln27_1_fu_238_p2 : ap_sig_allocacmp_i_load);

assign select_ln27_fu_230_p3 = ((icmp_ln28_fu_224_p2[0:0] == 1'b1) ? 2'd0 : ap_sig_allocacmp_j_load);

assign temp1_0_address0 = zext_ln30_fu_341_p1;

assign temp1_0_address1 = zext_ln30_1_fu_292_p1;

assign temp1_1_address0 = zext_ln30_reg_442;

assign temp1_1_address1 = zext_ln30_1_fu_292_p1;

assign tmp_fu_266_p3 = select_ln27_1_fu_244_p3[32'd2];

assign trunc_ln27_fu_252_p1 = select_ln27_1_fu_244_p3[2:0];

assign trunc_ln30_fu_282_p1 = select_ln27_fu_230_p3[0:0];

assign zext_ln28_fu_262_p1 = select_ln27_fu_230_p3;

assign zext_ln30_1_fu_292_p1 = add_ln30_fu_286_p2;

assign zext_ln30_fu_341_p1 = add_ln_reg_374_pp0_iter3_reg;

assign zext_ln31_fu_345_p1 = add_ln31_reg_395_pp0_iter8_reg;

always @ (posedge ap_clk) begin
    p_r_M_value_reg_412[22:0] <= 23'b00000000000000000000000;
    p_r_M_value_reg_412[31:30] <= 2'b00;
    p_r_M_value_11_reg_417[22:0] <= 23'b00000000000000000000000;
    p_r_M_value_11_reg_417[30] <= 1'b0;
    zext_ln30_reg_442[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln30_reg_442_pp0_iter5_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln30_reg_442_pp0_iter6_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln30_reg_442_pp0_iter7_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln30_reg_442_pp0_iter8_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln31_reg_493[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
end

endmodule //fft_8pt_bfs2
